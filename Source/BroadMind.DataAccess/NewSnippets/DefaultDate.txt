namespace Akwukwo.SqlServer.DataAccess.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class InitialDFW : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.Address",
                c => new
                    {
                        AddressId = c.Int(nullable: false),
                        Address1 = c.String(nullable: false, maxLength: 150),
                        Adress2 = c.String(maxLength: 150),
                        City = c.String(nullable: false, maxLength: 100),
                        ZipCode = c.String(nullable: false, maxLength: 10),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                        State_StateId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.AddressId)
                .ForeignKey("dbo.State", t => t.State_StateId, cascadeDelete: true)
                .Index(t => t.State_StateId);
            
            CreateTable(
                "dbo.State",
                c => new
                    {
                        StateId = c.Int(nullable: false),
                        StateCode = c.String(nullable: false, maxLength: 10),
                        StateName = c.String(nullable: false, maxLength: 50),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                    })
                .PrimaryKey(t => t.StateId)
                .Index(t => new { t.StateCode, t.StateName }, unique: true, name: "IX_State_StateCodeStateName");
            
            CreateTable(
                "dbo.Course",
                c => new
                    {
                        CourseId = c.Int(nullable: false),
                        CourseName = c.String(nullable: false, maxLength: 50),
                        Description = c.String(nullable: false, maxLength: 250),
                        Credit = c.Int(),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                        Grade = c.Int(),
                        Department_DepartmentId = c.Int(),
                        SemesterReport_SemesterReportId = c.Int(),
                    })
                .PrimaryKey(t => t.CourseId)
                .ForeignKey("dbo.Department", t => t.Department_DepartmentId)
                .ForeignKey("dbo.SemesterReport", t => t.SemesterReport_SemesterReportId)
                .Index(t => t.CourseName, unique: true, name: "IX_Course_CourseName")
                .Index(t => t.Department_DepartmentId)
                .Index(t => t.SemesterReport_SemesterReportId);
            
            CreateTable(
                "dbo.Department",
                c => new
                    {
                        DepartmentId = c.Int(nullable: false),
                        DepartmentName = c.String(nullable: false, maxLength: 50),
                        DepartmentDescription = c.String(nullable: false, maxLength: 250),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                    })
                .PrimaryKey(t => t.DepartmentId)
                .Index(t => t.DepartmentName, unique: true, name: "IX_Department_DepartmentName");
            
            CreateTable(
                "dbo.Enrollment",
                c => new
                    {
                        EnrollmentId = c.Int(nullable: false),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                        Course_CourseId = c.Int(),
                        SemesterReport_SemesterReportId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.EnrollmentId)
                .ForeignKey("dbo.Course", t => t.Course_CourseId)
                .ForeignKey("dbo.SemesterReport", t => t.SemesterReport_SemesterReportId, cascadeDelete: true)
                .Index(t => t.Course_CourseId)
                .Index(t => t.SemesterReport_SemesterReportId);
            
            CreateTable(
                "dbo.SemesterReport",
                c => new
                    {
                        SemesterReportId = c.Int(nullable: false),
                        AcademicYear = c.String(nullable: false, maxLength: 10),
                        CalendarYear = c.String(nullable: false, maxLength: 10),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                        StudentTranscript_StudentTranscriptId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.SemesterReportId)
                .ForeignKey("dbo.StudentTranscript", t => t.StudentTranscript_StudentTranscriptId, cascadeDelete: true)
                .Index(t => t.StudentTranscript_StudentTranscriptId);
            
            CreateTable(
                "dbo.StudentTranscript",
                c => new
                    {
                        StudentTranscriptId = c.Int(nullable: false),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                    })
                .PrimaryKey(t => t.StudentTranscriptId)
                .ForeignKey("dbo.Student", t => t.StudentTranscriptId)
                .Index(t => t.StudentTranscriptId);
            
            CreateTable(
                "dbo.Student",
                c => new
                    {
                        StudentId = c.Int(nullable: false),
                        FirstName = c.String(nullable: false, maxLength: 50),
                        MiddleName = c.String(nullable: false, maxLength: 50),
                        Gender = c.Int(),
                        AccruedCredit = c.Int(),
                        InitialEnrollmentDate = c.DateTime(nullable: false),
                        DateOfBirth = c.DateTime(nullable: false),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                        LastName = c.String(nullable: false, maxLength: 50),
                        Address_AddressId = c.Int(nullable: false),
                        Major_MajorId = c.Int(),
                    })
                .PrimaryKey(t => t.StudentId)
                .ForeignKey("dbo.Address", t => t.Address_AddressId, cascadeDelete: true)
                .ForeignKey("dbo.Major", t => t.Major_MajorId)
                .Index(t => t.Address_AddressId)
                .Index(t => t.Major_MajorId);
            
            CreateTable(
                "dbo.Major",
                c => new
                    {
                        MajorId = c.Int(nullable: false),
                        MajorName = c.String(nullable: false, maxLength: 50),
                        MajorDescription = c.String(nullable: false, maxLength: 200),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                    })
                .PrimaryKey(t => t.MajorId)
                .Index(t => t.MajorName, unique: true, name: "IX_Major_MajorName");
            
            CreateTable(
                "dbo.Telephone",
                c => new
                    {
                        TelephoneId = c.Int(nullable: false),
                        AreaCode = c.String(nullable: false, maxLength: 3),
                        Prefix = c.String(nullable: false, maxLength: 3),
                        LineNumber = c.String(nullable: false, maxLength: 4),
                        Extension = c.String(nullable: false, maxLength: 5),
                        PhoneType = c.Int(nullable: false),
                        CreatedDate = c.DateTime(nullable: false, defaultValueSql: "GETDATE()"),
                        ModifiedDate = c.DateTime(),
                        ModifiedBy = c.String(maxLength: 50),
                        Student_StudentId = c.Int(),
                    })
                .PrimaryKey(t => t.TelephoneId)
                .ForeignKey("dbo.Student", t => t.Student_StudentId)
                .Index(t => new { t.AreaCode, t.Prefix, t.LineNumber }, unique: true, name: "IX_Telephone_AreaCodePrefixLineNumber")
                .Index(t => t.Student_StudentId);
            
            CreateTable(
                "dbo.EnrollmentStudent",
                c => new
                    {
                        Enrollment_EnrollmentId = c.Int(nullable: false),
                        Student_StudentId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => new { t.Enrollment_EnrollmentId, t.Student_StudentId })
                .ForeignKey("dbo.Enrollment", t => t.Enrollment_EnrollmentId, cascadeDelete: true)
                .ForeignKey("dbo.Student", t => t.Student_StudentId, cascadeDelete: true)
                .Index(t => t.Enrollment_EnrollmentId)
                .Index(t => t.Student_StudentId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.EnrollmentStudent", "Student_StudentId", "dbo.Student");
            DropForeignKey("dbo.EnrollmentStudent", "Enrollment_EnrollmentId", "dbo.Enrollment");
            DropForeignKey("dbo.Enrollment", "SemesterReport_SemesterReportId", "dbo.SemesterReport");
            DropForeignKey("dbo.SemesterReport", "StudentTranscript_StudentTranscriptId", "dbo.StudentTranscript");
            DropForeignKey("dbo.Telephone", "Student_StudentId", "dbo.Student");
            DropForeignKey("dbo.StudentTranscript", "StudentTranscriptId", "dbo.Student");
            DropForeignKey("dbo.Student", "Major_MajorId", "dbo.Major");
            DropForeignKey("dbo.Student", "Address_AddressId", "dbo.Address");
            DropForeignKey("dbo.Course", "SemesterReport_SemesterReportId", "dbo.SemesterReport");
            DropForeignKey("dbo.Enrollment", "Course_CourseId", "dbo.Course");
            DropForeignKey("dbo.Course", "Department_DepartmentId", "dbo.Department");
            DropForeignKey("dbo.Address", "State_StateId", "dbo.State");
            DropIndex("dbo.EnrollmentStudent", new[] { "Student_StudentId" });
            DropIndex("dbo.EnrollmentStudent", new[] { "Enrollment_EnrollmentId" });
            DropIndex("dbo.Telephone", new[] { "Student_StudentId" });
            DropIndex("dbo.Telephone", "IX_Telephone_AreaCodePrefixLineNumber");
            DropIndex("dbo.Major", "IX_Major_MajorName");
            DropIndex("dbo.Student", new[] { "Major_MajorId" });
            DropIndex("dbo.Student", new[] { "Address_AddressId" });
            DropIndex("dbo.StudentTranscript", new[] { "StudentTranscriptId" });
            DropIndex("dbo.SemesterReport", new[] { "StudentTranscript_StudentTranscriptId" });
            DropIndex("dbo.Enrollment", new[] { "SemesterReport_SemesterReportId" });
            DropIndex("dbo.Enrollment", new[] { "Course_CourseId" });
            DropIndex("dbo.Department", "IX_Department_DepartmentName");
            DropIndex("dbo.Course", new[] { "SemesterReport_SemesterReportId" });
            DropIndex("dbo.Course", new[] { "Department_DepartmentId" });
            DropIndex("dbo.Course", "IX_Course_CourseName");
            DropIndex("dbo.State", "IX_State_StateCodeStateName");
            DropIndex("dbo.Address", new[] { "State_StateId" });
            DropTable("dbo.EnrollmentStudent");
            DropTable("dbo.Telephone");
            DropTable("dbo.Major");
            DropTable("dbo.Student");
            DropTable("dbo.StudentTranscript");
            DropTable("dbo.SemesterReport");
            DropTable("dbo.Enrollment");
            DropTable("dbo.Department");
            DropTable("dbo.Course");
            DropTable("dbo.State");
            DropTable("dbo.Address");
        }
    }
}
