CREATE TABLE [dbo].[Address] (
    [AddressId] [int] NOT NULL,
    [Address1] [nvarchar](150) NOT NULL,
    [Adress2] [nvarchar](150),
    [City] [nvarchar](100) NOT NULL,
    [ZipCode] [nvarchar](10) NOT NULL,
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    [StateCode] [nvarchar](2) NOT NULL,
    [Country] [nvarchar](25),
    CONSTRAINT [PK_dbo.Address] PRIMARY KEY ([AddressId])
)
CREATE TABLE [dbo].[Course] (
    [CourseId] [int] NOT NULL,
    [CourseName] [nvarchar](50) NOT NULL,
    [Description] [nvarchar](250) NOT NULL,
    [Credit] [int],
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    [Department_DepartmentId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Course] PRIMARY KEY ([CourseId])
)
CREATE UNIQUE INDEX [IX_Course_CourseName] ON [dbo].[Course]([CourseName])
CREATE INDEX [IX_Department_DepartmentId] ON [dbo].[Course]([Department_DepartmentId])
CREATE TABLE [dbo].[Department] (
    [DepartmentId] [int] NOT NULL,
    [DepartmentCode] [nvarchar](10) NOT NULL,
    [DepartmentName] [nvarchar](50) NOT NULL,
    [DepartmentDescription] [nvarchar](250) NOT NULL,
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    CONSTRAINT [PK_dbo.Department] PRIMARY KEY ([DepartmentId])
)
CREATE UNIQUE INDEX [IX_Department_DepartmentCode] ON [dbo].[Department]([DepartmentCode])
CREATE UNIQUE INDEX [IX_Department_DepartmentName] ON [dbo].[Department]([DepartmentName])
CREATE TABLE [dbo].[Student] (
    [StudentId] [int] NOT NULL,
    [FirstName] [nvarchar](50) NOT NULL,
    [MiddleName] [nvarchar](50) NOT NULL,
    [Gender] [int],
    [AccruedCredit] [int],
    [InitialEnrollmentDate] [datetime] NOT NULL,
    [DateOfBirth] [datetime] NOT NULL,
    [Email] [nvarchar](50),
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    [LastName] [nvarchar](50) NOT NULL,
    [Address_AddressId] [int] NOT NULL,
    [Major_MajorId] [int],
    CONSTRAINT [PK_dbo.Student] PRIMARY KEY ([StudentId])
)
CREATE INDEX [IX_Address_AddressId] ON [dbo].[Student]([Address_AddressId])
CREATE INDEX [IX_Major_MajorId] ON [dbo].[Student]([Major_MajorId])
CREATE TABLE [dbo].[Enrollment] (
    [EnrollmentId] [int] NOT NULL,
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    [Course_CourseId] [int],
    CONSTRAINT [PK_dbo.Enrollment] PRIMARY KEY ([EnrollmentId])
)
CREATE INDEX [IX_Course_CourseId] ON [dbo].[Enrollment]([Course_CourseId])
CREATE TABLE [dbo].[Major] (
    [MajorId] [int] NOT NULL,
    [MajorName] [nvarchar](50) NOT NULL,
    [MajorDescription] [nvarchar](200) NOT NULL,
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    CONSTRAINT [PK_dbo.Major] PRIMARY KEY ([MajorId])
)
CREATE UNIQUE INDEX [IX_Major_MajorName] ON [dbo].[Major]([MajorName])
CREATE TABLE [dbo].[Semester] (
    [SemesterId] [int] NOT NULL,
    [AcademicYear] [nvarchar](20) NOT NULL,
    [CalendarYear] [nvarchar](20) NOT NULL,
    [SemesterName] [nvarchar](10) NOT NULL,
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    [StudentId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Semester] PRIMARY KEY ([SemesterId])
)
CREATE UNIQUE INDEX [IX_Semester_AcademicYearCalendarYearSemesterNameStudentId] ON [dbo].[Semester]([AcademicYear], [CalendarYear], [SemesterName], [StudentId])
CREATE TABLE [dbo].[Telephone] (
    [TelephoneId] [int] NOT NULL,
    [AreaCode] [nvarchar](3) NOT NULL,
    [Prefix] [nvarchar](3) NOT NULL,
    [LineNumber] [nvarchar](4) NOT NULL,
    [Extension] [nvarchar](5),
    [PhoneType] [int] NOT NULL,
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    [StudentId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Telephone] PRIMARY KEY ([TelephoneId])
)
CREATE UNIQUE INDEX [IX_Telephone_AreaCodePrefixLineNumber] ON [dbo].[Telephone]([AreaCode], [Prefix], [LineNumber])
CREATE INDEX [IX_StudentId] ON [dbo].[Telephone]([StudentId])
CREATE TABLE [dbo].[FinancialAid] (
    [FinancialAidId] [int] NOT NULL,
    [FirstName] [nvarchar](50) NOT NULL,
    [MiddleName] [nvarchar](50),
    [LastName] [nvarchar](50) NOT NULL,
    [Amount] [decimal](18, 2),
    [OnTrack] [bit],
    [Classification] [nvarchar](50),
    CONSTRAINT [PK_dbo.FinancialAid] PRIMARY KEY ([FinancialAidId])
)
CREATE TABLE [dbo].[State] (
    [StateId] [int] NOT NULL,
    [StateCode] [nvarchar](10) NOT NULL,
    [StateName] [nvarchar](50) NOT NULL,
    [CreatedDate] [datetime] NOT NULL DEFAULT GETDATE(),
    [ModifiedDate] [datetime],
    [ModifiedBy] [nvarchar](50),
    CONSTRAINT [PK_dbo.State] PRIMARY KEY ([StateId])
)
CREATE UNIQUE INDEX [IX_State_StateCodeStateName] ON [dbo].[State]([StateCode], [StateName])
CREATE TABLE [dbo].[StudentEnrollment] (
    [Student_StudentId] [int] NOT NULL,
    [Enrollment_EnrollmentId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.StudentEnrollment] PRIMARY KEY ([Student_StudentId], [Enrollment_EnrollmentId])
)
CREATE INDEX [IX_Student_StudentId] ON [dbo].[StudentEnrollment]([Student_StudentId])
CREATE INDEX [IX_Enrollment_EnrollmentId] ON [dbo].[StudentEnrollment]([Enrollment_EnrollmentId])
CREATE TABLE [dbo].[CourseStudent] (
    [Course_CourseId] [int] NOT NULL,
    [Student_StudentId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.CourseStudent] PRIMARY KEY ([Course_CourseId], [Student_StudentId])
)
CREATE INDEX [IX_Course_CourseId] ON [dbo].[CourseStudent]([Course_CourseId])
CREATE INDEX [IX_Student_StudentId] ON [dbo].[CourseStudent]([Student_StudentId])
CREATE SEQUENCE [dbo].[StudentSequence] AS [int] START WITH 1000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[TelephoneSequence]  AS [int] START WITH 2000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[DepartmentSequence]  AS [int] START WITH 3000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[MajorSequence]  AS [int] START WITH 4000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[EnrollmentSequence]  AS [int] START WITH 5000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[AddressSequence]  AS [int] START WITH 6000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[CourseSequence]  AS [int] START WITH 7000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[StateSequence]  AS [int] START WITH 8000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[FinancialAidSequence]  AS [int] START WITH 9000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
CREATE SEQUENCE [dbo].[SemesterSequence]  AS [int] START WITH 1000000 INCREMENT BY 1 MINVALUE -2147483648 MAXVALUE 2147483647 
GO

CREATE PROCEDURE [dbo].[sp_CollegeWebAPISequence]
@SequenceName nvarchar(50),  
@SequenceValue INT OUTPUT
AS  

IF @SequenceName IS NULL
   BEGIN
       PRINT 'ERROR: You must specify a sequence name to execute.'
       RETURN(1)
   END
ELSE
	BEGIN
		IF @SequenceName = 'AddressSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.AddressSequence;
		IF @SequenceName = 'StateSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.StateSequence;		
		IF @SequenceName = 'CourseSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.CourseSequence;		
		IF @SequenceName = 'DepartmentSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.DepartmentSequence;	
		IF @SequenceName = 'EnrollmentSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.EnrollmentSequence;		
		IF @SequenceName = 'MajorSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.MajorSequence;	
		IF @SequenceName = 'StudentSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.StudentSequence;	
		IF @SequenceName = 'TelephoneSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.TelephoneSequence;	
		IF @SequenceName = 'FinancialAidSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.FinancialAidSequence;	
		IF @SequenceName = 'SemesterSequence'
			SELECT @SequenceValue = NEXT VALUE FOR dbo.SemesterSequence;	
			
	END
SELECT @SequenceValue
ALTER TABLE [dbo].[Course] ADD CONSTRAINT [FK_dbo.Course_dbo.Department_Department_DepartmentId] FOREIGN KEY ([Department_DepartmentId]) REFERENCES [dbo].[Department] ([DepartmentId]) ON DELETE CASCADE
ALTER TABLE [dbo].[Student] ADD CONSTRAINT [FK_dbo.Student_dbo.Address_Address_AddressId] FOREIGN KEY ([Address_AddressId]) REFERENCES [dbo].[Address] ([AddressId]) ON DELETE CASCADE
ALTER TABLE [dbo].[Student] ADD CONSTRAINT [FK_dbo.Student_dbo.Major_Major_MajorId] FOREIGN KEY ([Major_MajorId]) REFERENCES [dbo].[Major] ([MajorId])
ALTER TABLE [dbo].[Enrollment] ADD CONSTRAINT [FK_dbo.Enrollment_dbo.Course_Course_CourseId] FOREIGN KEY ([Course_CourseId]) REFERENCES [dbo].[Course] ([CourseId])
ALTER TABLE [dbo].[Semester] ADD CONSTRAINT [FK_dbo.Semester_dbo.Student_StudentId] FOREIGN KEY ([StudentId]) REFERENCES [dbo].[Student] ([StudentId]) ON DELETE CASCADE
ALTER TABLE [dbo].[Telephone] ADD CONSTRAINT [FK_dbo.Telephone_dbo.Student_StudentId] FOREIGN KEY ([StudentId]) REFERENCES [dbo].[Student] ([StudentId]) ON DELETE CASCADE
ALTER TABLE [dbo].[StudentEnrollment] ADD CONSTRAINT [FK_dbo.StudentEnrollment_dbo.Student_Student_StudentId] FOREIGN KEY ([Student_StudentId]) REFERENCES [dbo].[Student] ([StudentId]) ON DELETE CASCADE
ALTER TABLE [dbo].[StudentEnrollment] ADD CONSTRAINT [FK_dbo.StudentEnrollment_dbo.Enrollment_Enrollment_EnrollmentId] FOREIGN KEY ([Enrollment_EnrollmentId]) REFERENCES [dbo].[Enrollment] ([EnrollmentId]) ON DELETE CASCADE
ALTER TABLE [dbo].[CourseStudent] ADD CONSTRAINT [FK_dbo.CourseStudent_dbo.Course_Course_CourseId] FOREIGN KEY ([Course_CourseId]) REFERENCES [dbo].[Course] ([CourseId]) ON DELETE CASCADE
ALTER TABLE [dbo].[CourseStudent] ADD CONSTRAINT [FK_dbo.CourseStudent_dbo.Student_Student_StudentId] FOREIGN KEY ([Student_StudentId]) REFERENCES [dbo].[Student] ([StudentId]) ON DELETE CASCADE
CREATE TABLE [dbo].[__MigrationHistory] (
    [MigrationId] [nvarchar](150) NOT NULL,
    [ContextKey] [nvarchar](300) NOT NULL,
    [Model] [varbinary](max) NOT NULL,
    [ProductVersion] [nvarchar](32) NOT NULL,
    CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
)
INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
VALUES (N'201607261440022_InitialDataLoad', N'BroadMind.DataAccess.Migrations.Configuration',  

